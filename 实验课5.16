问题1
3-1数字三个内置类名称
浮点值numeric 整数integer 复数complex

3-2查找因子水平值函数
levels（）

3-3如何把字符串“6.283185”转换为数字
as.numeric(x)函数、

3-4指出至少三个用于检视变量内容的函数
is.numeric（） is.integer（） is.double（）

3-5如何删除用户工作区中的所有变量？
使用rm()函数 rm（list=ls（））
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
问题2
练习3-1查找以下值Inf、NA、NaN和""的类、类型、模式及存储模式。
class(Inf)
class(NA)
class(NaN)
class("")
attributes(Inf)
attributes(NA)
attributes(NaN)
attributes("")

练习3-2随机从“dog”、“cat”、“dolphin”、 “hamster”和“goldfish”中以相等的概率生成100个宠物名。显示所得变量的前几个值，并计算每种宠物的数量。
pets_char <- sample(c("dog","cat","dolphin","hamster","goldfish"),100,replace =TRUE )
pets_fac <- as.factor(pets_char)
summary(pets_fac)

练习3-3创建一些以水果命名的变量。列出用户工作区中所有包含字母“a”的变量
apple=1
banna=2
print(ls(pattern="a"))
seq.int(0,1.25,0.25)
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
问题3
4-1你将如何创建一个包含值0、0.25、0.5、0.75、1和1.25的向量
seq.int(0,1.25,0.25)

4-2描述两种命名向量元素的方式
直接命名  用函数命名 names(x)<-c(“a”,”b”,……)

4-3向量索引中的四种类型是什么
给向量传入正数，返回此位置上的向量元素。
给向量传入负数，返回一个向量，它将包含除了这些位置以外的所有元素
给向量传入一个逻辑向量，它会返回一个向量，里面只包含索引为TRUE的元素
对于已命名的向量，给向量传入命名的字符向量，将会返回向量中包含这些名字的元素

4-4一个3×4×6的数组的长度是多少
72

4-5你会用哪个操作符来执行两个矩阵的内积
%*%
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
问题4
1)创建一个从11到50，步长为33的向量,再将向量减去向量c(2,3)
x <- seq.int(11,50,3)
num_1=x-c(2,3)

2)创建一个从1.1到4 4,步长为20的向量,再将向量乘向量c(4,5,8,9)
a<-seq(1.1,4,20)
num_21=a*c(4,5,8,9)

3)计算c(1,2,4,6)和c(8,0,-1,-4)的加减乘除后的结果
num_3jia=c(1,2,4,6)+c(8,0,-1,-4)
num_3jian=c(1,2,4,6)-c(8,0,-1,-4)
num_3cheng=c(1,2,4,6)*c(8,0,-1,-4)
num_3chu=c(1,2,4,6)/c(8,0,-1,-4)
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
问题5
练习4-1第n个三角形数表示为n * (n + 1) / 2。创建一个包含前50个三角形数的序列。R有一个内置常数
letters，它包含小写的罗马字母。使用前15个英文字母来给你刚刚创建的向量命名。选择命名为元音的三角数
n=seq(1:50)
triangle=n*(n+1)/2
name=letters[1:15]
names (triangle) <- name
triangle

#练习4-2，diag函数有几种用途，其中之一是以输入向
#量作为对角线来创建一个方阵。使用序列10到0到10
#（即10,...,1,0,1,...,10）创建一个21×21的矩阵
a=c(10,9,8,7,6,5,4,3,2,1,0,1,2,3,4,5,6,7,8,9,10)
square=diag(a)
square
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
问题6
5-1以下列表的长度是多少
3

5-2你会在哪里找到成对列表
成对列表仅在内部使用，用于将参数传递到函数中，其唯一可能被显式调用的情形是在使用formals时，该函数将返回一个函数参数的成对列表

5-3尽可能多地说出的几种创建数据框子集的方法
使用括号，通过提取我们想要的行和列来进行子集化；使用括号，通过省略我们不想要的行和列来进行子集化；使用括号，使用 which() 函数和 ％in％运算符组合进行子集化；使用 subset()函数；使用 dplyr 包中的 filter()和 select() 函数实现数据框子集化

5-4如何创建一个数据框，使得它的列名既非唯一又非有效
创建数据框时，列名必须是唯一且有效的变量名称，此功能可通过data.frame传入check.names=FALSE关闭

5-5你会使用哪个函数将一个数据框追加到另一个之后
rbind()函数
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
问题7
练习5-1，创建一个列表变量，它的第一个元素包含所有从0到9的平方数，第二个元素为10至19之内的所有平方数，
依此类推，最后一个元素为90到99之内的平方数。不是平方数的元素也应该被包含在内
m1<- matrix(0:99,nrow=10,ncol=10,byrow=T)
m1
list=apply(
  m1,MARGIN = 1,
  function(m1)
  {
    m1[round(sqrt(m1))^2==m1]
  }
)
list

练习5-2，R有几个内置的数据集，其中包括由安德森和费舍尔在20世纪30年代收集和分析的iris（指鸢尾花，而不是虹膜）数据。输入iris即可
看到数据集。创建一个新的数据框，它由iris数据集的数值列组成；计算各列的平均值
iris
frame_new <- data.frame(
 a=iris[,1],
 b=iris[,2],
 c=iris[,3],
 d=iris[,4]
)
frame_new
frame_ave <-colMeans(frame_new)
frame_ave

练习5-3，beaver1和beaver2数据集包含两个海狸的体温数据。为beaver1数据集添加一列名为id的列，其值全部为1。同样，也为beaver2
添加一个id列，值全为2。垂直拼接两个数据框，并且找到所有活跃着的海狸的子集。
beaver1
beaver2
nrow_beaver1=nrow(beaver1)
nrow_beaver2=nrow(beaver2)
beaver1_new <- cbind(beaver1,id=rep(1,nrow_beaver1))
beaver2_new <- cbind(beaver2,id=rep(2,nrow_beaver2))
beaver12 <- rbind(beaver1_new,beaver2_new)
beaver12_active <- subset(beaver12,activ>0)
beaver12_active

